// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RRAstro.Repository;
using System;

namespace RRAstro.Repository.Migrations
{
    [DbContext(typeof(RRAstroDBContext))]
    [Migration("20171101171918_bookappointment")]
    partial class bookappointment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RRAstro.Core.Domain.BookApp.BookAppointment", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<decimal>("Sequence");

                    b.Property<string>("UserID");

                    b.Property<string>("alternatePhoneNumber");

                    b.Property<string>("comments");

                    b.Property<DateTime>("dateOfAppointment");

                    b.Property<DateTime>("timeOfAppointment");

                    b.HasKey("ID");

                    b.ToTable("BookAppointments","dbo");
                });

            modelBuilder.Entity("RRAstro.Core.Domain.GetColorStone.ColorStoneReq", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<decimal>("Sequence");

                    b.Property<string>("UserID");

                    b.Property<string>("birthCity");

                    b.Property<string>("birthCountry");

                    b.Property<DateTime>("dateOfBirth");

                    b.Property<string>("email");

                    b.Property<string>("firstName");

                    b.Property<string>("gender");

                    b.Property<string>("lastName");

                    b.Property<string>("phoneNumber");

                    b.Property<DateTime>("timeOfBirth");

                    b.HasKey("ID");

                    b.ToTable("ColorStoneReqs","dbo");
                });

            modelBuilder.Entity("RRAstro.Core.Domain.KundaliReq.KundaliRequest", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<decimal>("Sequence");

                    b.Property<string>("UserID");

                    b.Property<string>("birthCity");

                    b.Property<string>("birthCountry");

                    b.Property<DateTime>("dateOfBirth");

                    b.Property<string>("email");

                    b.Property<string>("firstName");

                    b.Property<string>("gender");

                    b.Property<string>("lastName");

                    b.Property<string>("phoneNumber");

                    b.Property<DateTime>("timeOfBirth");

                    b.HasKey("ID");

                    b.ToTable("KundaliReqs","dbo");
                });

            modelBuilder.Entity("RRAstro.Core.Domain.QuestionAns.Question", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("QuestionDescription");

                    b.Property<long?>("QuestionTopicID");

                    b.Property<decimal>("Sequence");

                    b.Property<string>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("QuestionTopicID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("RRAstro.Core.Domain.QuestionAns.QuestionTopic", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<decimal>("Sequence");

                    b.Property<string>("UserID");

                    b.Property<string>("birthCity");

                    b.Property<string>("birthCountry");

                    b.Property<DateTime>("dateOfBirth");

                    b.Property<string>("email");

                    b.Property<string>("firstName");

                    b.Property<string>("gender");

                    b.Property<string>("lastName");

                    b.Property<DateTime>("timeOfBirth");

                    b.HasKey("ID");

                    b.ToTable("QuestionTopics","dbo");
                });

            modelBuilder.Entity("RRAstro.Core.Domain.QuestionAns.Reply", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<long?>("QuestionID");

                    b.Property<string>("ReplyDescription");

                    b.Property<decimal>("Sequence");

                    b.Property<string>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("QuestionID");

                    b.ToTable("Replys");
                });

            modelBuilder.Entity("RRAstro.Core.Domain.QuestionAns.Question", b =>
                {
                    b.HasOne("RRAstro.Core.Domain.QuestionAns.QuestionTopic")
                        .WithMany("QuestionList")
                        .HasForeignKey("QuestionTopicID");
                });

            modelBuilder.Entity("RRAstro.Core.Domain.QuestionAns.Reply", b =>
                {
                    b.HasOne("RRAstro.Core.Domain.QuestionAns.Question")
                        .WithMany("ReplyList")
                        .HasForeignKey("QuestionID");
                });
#pragma warning restore 612, 618
        }
    }
}
